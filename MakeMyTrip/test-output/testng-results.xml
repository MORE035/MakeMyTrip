<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-15T11:08:16 IST" name="Suite" finished-at="2022-02-15T11:08:17 IST" duration-ms="534">
    <groups>
    </groups>
    <test started-at="2022-02-15T11:08:16 IST" name="Test1" finished-at="2022-02-15T11:08:17 IST" duration-ms="376">
      <class name="testCases.TestCase1">
        <test-method signature="case1()[pri:0, instance:testCases.TestCase1@37d4349f]" started-at="2022-02-15T11:08:16 IST" name="case1" finished-at="2022-02-15T11:08:16 IST" duration-ms="18" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testCases.TestCase1.case1(TestCase1.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case1 -->
        <test-method signature="case2()[pri:0, instance:testCases.TestCase1@37d4349f]" started-at="2022-02-15T11:08:17 IST" name="case2" finished-at="2022-02-15T11:08:17 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case2 -->
        <test-method signature="case3()[pri:0, instance:testCases.TestCase1@37d4349f]" started-at="2022-02-15T11:08:17 IST" name="case3" finished-at="2022-02-15T11:08:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case3 -->
        <test-method signature="case4()[pri:0, instance:testCases.TestCase1@37d4349f]" started-at="2022-02-15T11:08:17 IST" name="case4" finished-at="2022-02-15T11:08:17 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case4 -->
      </class> <!-- testCases.TestCase1 -->
    </test> <!-- Test1 -->
    <test started-at="2022-02-15T11:08:17 IST" name="Test2" finished-at="2022-02-15T11:08:17 IST" duration-ms="56">
      <class name="testCases.TestCase2">
        <test-method signature="case5()[pri:0, instance:testCases.TestCase2@5a45133e]" started-at="2022-02-15T11:08:17 IST" name="case5" finished-at="2022-02-15T11:08:17 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case5 -->
        <test-method signature="case6()[pri:0, instance:testCases.TestCase2@5a45133e]" started-at="2022-02-15T11:08:17 IST" name="case6" finished-at="2022-02-15T11:08:17 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case6 -->
        <test-method signature="case7()[pri:0, instance:testCases.TestCase2@5a45133e]" started-at="2022-02-15T11:08:17 IST" name="case7" finished-at="2022-02-15T11:08:17 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case7 -->
        <test-method signature="case8()[pri:0, instance:testCases.TestCase2@5a45133e]" started-at="2022-02-15T11:08:17 IST" name="case8" finished-at="2022-02-15T11:08:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case8 -->
      </class> <!-- testCases.TestCase2 -->
    </test> <!-- Test2 -->
    <test started-at="2022-02-15T11:08:17 IST" name="Test3" finished-at="2022-02-15T11:08:17 IST" duration-ms="50">
      <class name="testCases.TestCase3">
        <test-method is-config="true" signature="open()[pri:0, instance:testCases.TestCase3@70e9c95d]" started-at="2022-02-15T11:08:10 IST" name="open" finished-at="2022-02-15T11:08:16 IST" duration-ms="6575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- open -->
        <test-method signature="case10()[pri:0, instance:testCases.TestCase3@70e9c95d]" started-at="2022-02-15T11:08:17 IST" name="case10" finished-at="2022-02-15T11:08:17 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case10 -->
        <test-method signature="case11()[pri:0, instance:testCases.TestCase3@70e9c95d]" started-at="2022-02-15T11:08:17 IST" name="case11" finished-at="2022-02-15T11:08:17 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case11 -->
        <test-method signature="case12()[pri:0, instance:testCases.TestCase3@70e9c95d]" started-at="2022-02-15T11:08:17 IST" name="case12" finished-at="2022-02-15T11:08:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case12 -->
        <test-method signature="case9()[pri:0, instance:testCases.TestCase3@70e9c95d]" started-at="2022-02-15T11:08:17 IST" name="case9" finished-at="2022-02-15T11:08:17 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- case9 -->
        <test-method is-config="true" signature="browserclose()[pri:0, instance:testCases.TestCase3@70e9c95d]" started-at="2022-02-15T11:08:17 IST" name="browserclose" finished-at="2022-02-15T11:08:18 IST" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserclose -->
      </class> <!-- testCases.TestCase3 -->
    </test> <!-- Test3 -->
  </suite> <!-- Suite -->
</testng-results>
